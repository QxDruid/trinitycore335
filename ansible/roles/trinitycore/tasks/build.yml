---
- name: install PIP3
  apt: 
    name: "python3-pip"
    update_cache: yes
    state: present

- name: Install build deps
  apt:
    name: "{{ item }}"
    state: present
  with_items:
  - git 
  - clang 
  - cmake 
  - make 
  - gcc 
  - g++ 
  - libmariadbclient-dev 
  - libssl-dev 
  - libbz2-dev 
  - libreadline-dev 
  - libncurses-dev 
  - libboost-all-dev  
  - p7zip 
  - libmariadb-client-lgpl-dev-compat

- name: Add trinity server user
  ansible.builtin.user:
    name: trinity
    password: "{{ trinity_user_password }}"
    shell: /bin/bash
    groups: sudo
    append: yes

- name: Clone Trinitycore 3.3.5 src from git
  ansible.builtin.git:
    repo: git://github.com/TrinityCore/TrinityCore.git 
    dest: /home/vagrant/TrinityCore
    single_branch: yes
    version:  "3.3.5"

- name: Create a directory if it does not exist
  ansible.builtin.file:
    path: /home/vagrant/TrinityCore/build
    state: directory
    mode: '0777'

- name: Run CMAKE
  ansible.builtin.command:
    chdir: /home/vagrant/TrinityCore/build
    cmd: cmake ../ -DCMAKE_INSTALL_PREFIX=/home/vagrant/server

- name: register nproc value
  ansible.builtin.command:
    cmd: nproc
  register: cpu_count

- name: Run make -j $(nproc) 
  ansible.builtin.command:
    chdir: /home/vagrant/TrinityCore/build
    cmd: make -j"{{cpu_count.stdout}}"

- name: Run make install
  ansible.builtin.command:
    chdir: /home/vagrant/TrinityCore/build
    cmd: make install

- name: register bin files to fetch
  ansible.builtin.command:
    chdir: /home/vagrant/server
    cmd: ls etc/
  register: etc_files


- name: register bin files to fetch
  ansible.builtin.command:
    chdir: /home/vagrant/server
    cmd: ls bin/
  register: bin_files

- name: fetch builded etc
  ansible.builtin.fetch:
    src: "/home/vagrant/server/etc/{{item}}"
    dest: "{{artifacts_collect_folder}}/etc/"
    flat: yes
    validate_checksum: no 
  with_items: "{{etc_files.stdout_lines}}"
  become: no

- name: fetch builded bin
  ansible.builtin.fetch:
    src: "/home/vagrant/server/bin/{{item}}"
    dest: "{{artifacts_collect_folder}}/bin/"
    flat: yes
    validate_checksum: no 
  with_items: "{{bin_files.stdout_lines}}"
  become: no